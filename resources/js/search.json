[[{"l":"Начало всех начал","p":["Наш чудесный маскот","Данный сайт предоставляет вам все мои заметки, сделанные во время изучения той или иной технологии. Здесь мы можете найти множество полезной информации.","Основные направления, которым я уделяю время:","Linux(Debian)","DevOps","Golang(мой основной профиль)"]},{"i":"что-здесь-можно-найти","l":"Что здесь можно найти?","p":["Объяснение сложных вещей простыми словами.","Полезные советы, ответы на популярные вопросы, лучшие практики, связанные с Golang.","Мой авторский Roadmap по изучению Golang.","Данный сайт постоянно обновляется и улучшается. Если у вас есть идеи для улучшения не стесняйтесь оставить issue."]}],[{"l":"Docker"},{"l":"Установка Docker","p":["Существует несколько способов установки Docker:","Через пакетный менеджер, такие как apt-get, pacman, dnf, brew;","Установить Docker Desktop и docker установится сам;","Через скрипт с сайта https://get.docker.com.","Рекомендуется использовать последний способ, он и описан ниже:","Не используйте sid для Debian, если хотите использовать способ выше.","Альтернативный способ:"]},{"l":"Запуск Docker без sudo","p":["Нужно просто добавить пользователя в нужную группу, а затем перезапустить docker."]}],[{"l":"Git"},{"l":"Установка git","p":["Git можно установить либо из официального репозитория:","Либо из исходников:"]},{"l":"Настройка git","p":["Настройка git происходит через git config."]},{"l":"Хранения настроек","p":["Настройки могут храниться в трех местах:","/etc/gitconfig, если использовать git config --system;","~/.gitconfig если использовать git config --global;",".git/config если использовать git config --local.","Чтобы просмотреть все существующие настройки:"]},{"i":"username-и-useremail","l":"user.name и user.email","p":["Первое, что следует настроить эту имя и почту пользователя. Например:"]},{"i":"coreeditor","l":"core.editor","p":["Git нам позволяет явно указать редактор, который стоит использовать для коммитов, разрешения конфликтов и так далее. По-умолчанию значение считывается из переменной среды $EDITOR."]},{"i":"committemplate","l":"commit.template","p":["Позволяет задать шаблон для коммита."]},{"i":"corepager","l":"core.pager","p":["Определяет какая программа будет использована для разбиения текста на страницы."]},{"i":"mergetool","l":"merge.tool","p":["Указывает на инструмент, который надо использовать для команды mergetool."]},{"i":"diffexternal","l":"diff.external","p":["Указывает на инструмент, который надо использовать для сравнения."]},{"i":"initdefaultbranch","l":"init.defaultBranch","p":["Ветка, с которой проект создается по-умолчанию."]},{"i":"pullrebase","l":"pull.rebase","p":["Какое поведение git использовать при получении изменений."]},{"i":"alias","l":"alias.*","p":["Git позволяет создавать псевдонимы. Например:","Советуется добавить:"]},{"i":"coreexcludesfile","l":"core.excludesfile","p":["Какие файлы стоит игнорировать в проектах."]},{"i":"colorui","l":"color.ui","p":["Стоит ли подсвечивать большую часть вывода.","Можно отдельно для разных элементов: color.branch, color.diff, color.interactive, color.status."]},{"l":"Команды git"},{"l":"git help","p":["Выводит справочную информацию о той или иной команде."]},{"l":"git config","p":["Позволяет взаимодействовать с конфигурацией git."]},{"l":"git init","p":["Инициализирует новый проект."]},{"l":"git add","p":["Индексирует указанные файлы."]},{"l":"git commit","p":["Делает коммит с проиндексированными файлами."]},{"l":"git clone","p":["Клонирует существующий репозиторий."]},{"l":"git status","p":["Позволяет просматривать состояние файлов(Untracked, Unmodified, Modified, Staged)."]},{"l":"git diff","p":["Позволяет просматривать отдельные файлы на изменение содержимого."]},{"l":"git rm","p":["Удаление файла из индексации репозитория."]},{"l":"git mv","p":["Команда чтобы переименовать файл.","Является alias для команд ниже:"]},{"l":"git log","p":["Позволяет просматривать историю коммитов."]},{"i":"git-restore--git-reset","l":"git restore / git reset","p":["git restore это современная замена git reset.","Отменяет индексацию файла."]},{"l":"git remote","p":["Позволяет взаимодействовать с удаленными репозиториями."]},{"l":"git fetch","p":["Позволяет подгрузить изменение с определенного удаленного репозитория."]},{"l":"git pull","p":["Тот же git fetch, но для основного сервера, как правило, и более прост в использовании."]},{"l":"git push","p":["Отправка изменений в удаленный репозиторий."]},{"l":"git tag","p":["Позволяет задавать теги.","Теги нужно отдельно отправлять в удаленный репозиторий. Смотрите команду git push.","Также обратите внимание на удаление тега на удаленном репозитории, также через команду git push."]},{"l":"git show","p":["Позволяет просматривать информацию о файлах, деревьях, тегах и коммитах."]},{"l":"git checkout","p":["Позволяет переключаться между ветками."]},{"l":"git branch","p":["Позволяет создать новую ветку.","Новую ветку, созданную командой git branch --move, надо отправить в удаленный репозиторий."]},{"l":"git merge","p":["Позволяет провести слияние веток.","Иногда Git не может сам решить конфликты, и оставляет маркеры для того, чтобы их можно было разрешить вручную.","Пример:","В этом примере произошел конфликт текущей ветки с веткой iss53 в файле index.html."]},{"l":"git mergetool","p":["Открывает инструмент для разрешения конфликтов."]},{"l":"git ls-remote","p":["Позволяет просмотреть все удаленный ссылки в удаленном репозитории."]},{"l":"git rebase","p":["Накладывает все коммиты одной ветки поверх коммитов другой ветки."]},{"l":"git daemon","p":["Используется для настройки демона Git.","Флаги:","reuseaddr: перезапускает сервер без ожидания таймаута существующих подключений.","base-path: указывается путь, где хранятся проекты. Путь будет автоматически подставляться, то есть вместо /srv/git/nvops.git можно будет использовать nvops.git.","export-all: экспортирует все проекты в директории /srv/git/.","P.S: base-path влияет на git://.","P.P.S: вместо export-all можно добавлять в каждый репозиторий файл git-daemon-export-ok.","Однако команду выше стоит запускать через сервис. Как это делать можно посмотреть в пункте серверный git."]},{"l":"git instaweb","p":["Позволяет запустить веб-сервер для просмотра экземпляра GitWeb для текущего репозитория."]},{"l":"git reflog","p":["Позволяет просматривать журнул с привязкой к ссылкам:"]},{"l":"git stash","p":["Позволяет сохранить работу для того, чтобы вернуться к ней позже:"]},{"l":"git clean","p":["Удаляет непроиндексированные файлы:"]},{"l":"git grep","p":["Аналог grep, но для рабочего пространства git и поиска по его деревьям:"]},{"l":"git filter-branch","p":["Является сторонней утилитой - https://github.com/newren/git-filter-repo.","Используется для изменения истории коммитов."]}],[{"l":"SSH"},{"l":"Генерация ssh-ключей"},{"l":"Подключение по SSH"},{"l":"SSH-agent","p":["ssh-agent - менеджер ключей для SSH. Он хранит ваши ключи и сертификаты в памяти, незашифрованные и готовые к использованию ssh. Это избавляет вас от необходимости вводить пароль каждый раз, когда вы подключаетесь к серверу. Он работает в фоновом режиме в вашей системе, отдельно от ssh, и обычно запускается при первом запуске ssh.","Чтобы добавить пароль от приватного ключа:"]},{"l":"SSH-copy-id","p":["Чтобы скопировать ключ на сервер используем комманду ниже:","Не забываем про выдачу необходимых прав."]},{"l":"sshd_config"},{"l":"Лучшие практики","p":["Меняем порт с 22 на любой другой","PermitRootLogin no","PubkeyAuthentication yes","PasswordAuthencication no (исключительно после настройки ключей)","PermitEmptyPasswords no (не имеет смысла, если соблюдать 4 пункт)"]},{"l":"Настройки клиента","p":["Клиент SSH настраивается через файл ~/.ssh/config.","Пример настроек:","Далее делается подключение через команду ниже:"]},{"l":"Пробрасывание портов","p":["Командой выше мы создали подключение через SSH-туннель, с пробросом внешнего 8000 порта на локальный 9000 порт. И после этого НЕ ЗАКРЫВАЯ соединения, в другой вкладке терминала мы сможет обращаться по этому порту."]}],[{"l":"Настройка Debian после установки"},{"l":"Выдача root-доступа для основного пользователя"},{"l":"Подключение SID-репозиториев"},{"l":"Подключение i386 библиотек"},{"l":"Обновление пакетов"},{"i":"установка-более-производительного-ядрадля-моей-картошки-и-если-нужны-игры","l":"Установка более производительного ядра(для моей картошки, и если нужны игры)","p":["Ядро: Xanmod Kernel"]},{"l":"Установка видео драйвера для Nvidia"}],[{"l":"Установка OpenSuse Tumbleweed"},{"l":"Создание загрузочного USB накопителя"},{"l":"Установка Live CD образа","p":["Я буду ставить OpenSuse без установщика, то есть через консоль."]},{"i":"сжениеburn-iso-образа","l":"Сжение(Burn) ISO образа"},{"l":"Процесс установки"},{"l":"Запуск Live CD","p":["Как и с любой другой операционной системой или дистрибутивом Linux, мы должны войти в загрузочный образ ISO.","После того как мы это сделаем перед нами появится XFCE рабочий стол.","Запущенный Live CD","После этого требуется лишь открыть браузер с этим руководством и терминал."]},{"i":"опционально-настройка-ssh-для-доступа-к-системе","l":"(Опционально) Настройка SSH для доступа к системе","p":["Далее просто используем ssh linux@x.x.x.x."]},{"l":"Обновление Live CD","p":["Я считаю необходимым обновить весь инструментарий Live CD до последних версий."]},{"l":"Установка локалей","p":["Без настройки локалей будет возникать ряд ошибок во время установки."]},{"l":"Подготовка разделов на жестком диске","p":["+100% - Linux filesystem","1G - EFI Filesystem","4G - Linux swap","А также меняем тип раздела при необходимости.","Выбор типа раздела","Выбор типа файловой системы","Далее выбираем Write подтверждаем создание разделов и выходим.","Далее при помощи утилиты cfdisk необходимо настроить разделы на данном диске.","Для начала требуется узнать наименование необходимого жесткого диска. Делается это при помощи команды lsblk.","Запуск команды lsblk","Нам нужно три раздела:","Нам предложат выбрать тип системы, для UEFI выбираем gpt.","После чего создаем новый раздел и вводим количество необходимой памяти.","Создание раздела","Созданные разделы","Теперь при помощи все той же команды lsblk, мы можем увидеть, что разделы успешно создались."]},{"l":"Форматирование разделов","p":["Для / разделов я буду использовать ext4 файловую систему.","Вероятно позже добавлю настройку xfs и btrfs. Крайне сомнительно, но может быть появится bcachefs."]},{"l":"Монтирование разделов"},{"l":"Установка базовой системы"},{"l":"Chrooting","p":["После чего перед нами будет терминал следующего вида.","Запущенный chroot"]},{"l":"Настройка fstab","p":["Для начала нам надо получить UUID всех трех разделов.","После чего мы открываем файл /etc/fstab и редактируем его по примеру ниже. Не забывая вставлять нужные UUID."]},{"l":"Установка grub"},{"l":"Загрузка в систему"}]]